name: Pull request

on: pull_request

jobs:
  build:
    name: Build docs
    runs-on: ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '~1.17'
    - name: Get Go module cache directory path
      id: go-module-cache-dir-path
      run: echo "::set-output name=dir::$(go env GOMODCACHE)"
    - name: Initialize Go module cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.go-module-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Download Go dependencies
      run: make go.deps
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: '~16'
    - name: Get Yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(npx yarn cache dir)"
    - name: Initialize Yarn module cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Download Yarn dependencies
      run: make js.deps
    - name: Initialize Hugo binary cache
      id: cache-hugo
      uses: actions/cache@v2
      with:
        path: hugo.linux
        key: ${{ runner.os }}-hugo-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-hugo-
    - name: Build Hugo binary
      if: steps.cache-hugo.outputs.cache-hit != 'true'
      run: make hugo.linux
    - name: Build docs
      run: make build.public
      env:
        HUGO: ./hugo.linux
        HUGO_BASE_URL: https://www.thethingsnetwork.org/docs
